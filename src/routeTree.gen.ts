/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SettingsImport } from './routes/settings'
import { Route as IndexImport } from './routes/index'
import { Route as PluginsPluginIdFeedImport } from './routes/plugins/$pluginId/feed'
import { Route as PluginsPluginIdTrendingIndexImport } from './routes/plugins/$pluginId/trending.index'
import { Route as PluginsPluginIdInstancesIndexImport } from './routes/plugins/$pluginId/instances/index'
import { Route as PluginsPluginIdUserApiIdImport } from './routes/plugins/$pluginId/user.$apiId'
import { Route as PluginsPluginIdTrendingTopicNameImport } from './routes/plugins/$pluginId/trending.$topicName'
import { Route as PluginsPluginIdPostApiIdImport } from './routes/plugins/$pluginId/post.$apiId'
import { Route as PluginsPluginIdCommunityApiIdIndexImport } from './routes/plugins/$pluginId/community.$apiId.index'
import { Route as PluginsPluginIdInstancesInstanceIdFeedImport } from './routes/plugins/$pluginId/instances/$instanceId/feed'
import { Route as PluginsPluginIdCommunityCommunityIdPostApiIdImport } from './routes/plugins/$pluginId/community.$communityId.post.$apiId'
import { Route as PluginsPluginIdInstancesInstanceIdCommunityApiIdIndexImport } from './routes/plugins/$pluginId/instances/$instanceId/community.$apiId.index'
import { Route as PluginsPluginIdInstancesInstanceIdCommunityCommunityIdPostApiIdImport } from './routes/plugins/$pluginId/instances/$instanceId/community.$communityId.post.$apiId'

// Create/Update Routes

const SettingsRoute = SettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PluginsPluginIdFeedRoute = PluginsPluginIdFeedImport.update({
  id: '/plugins/$pluginId/feed',
  path: '/plugins/$pluginId/feed',
  getParentRoute: () => rootRoute,
} as any)

const PluginsPluginIdTrendingIndexRoute =
  PluginsPluginIdTrendingIndexImport.update({
    id: '/plugins/$pluginId/trending/',
    path: '/plugins/$pluginId/trending/',
    getParentRoute: () => rootRoute,
  } as any)

const PluginsPluginIdInstancesIndexRoute =
  PluginsPluginIdInstancesIndexImport.update({
    id: '/plugins/$pluginId/instances/',
    path: '/plugins/$pluginId/instances/',
    getParentRoute: () => rootRoute,
  } as any)

const PluginsPluginIdUserApiIdRoute = PluginsPluginIdUserApiIdImport.update({
  id: '/plugins/$pluginId/user/$apiId',
  path: '/plugins/$pluginId/user/$apiId',
  getParentRoute: () => rootRoute,
} as any)

const PluginsPluginIdTrendingTopicNameRoute =
  PluginsPluginIdTrendingTopicNameImport.update({
    id: '/plugins/$pluginId/trending/$topicName',
    path: '/plugins/$pluginId/trending/$topicName',
    getParentRoute: () => rootRoute,
  } as any)

const PluginsPluginIdPostApiIdRoute = PluginsPluginIdPostApiIdImport.update({
  id: '/plugins/$pluginId/post/$apiId',
  path: '/plugins/$pluginId/post/$apiId',
  getParentRoute: () => rootRoute,
} as any)

const PluginsPluginIdCommunityApiIdIndexRoute =
  PluginsPluginIdCommunityApiIdIndexImport.update({
    id: '/plugins/$pluginId/community/$apiId/',
    path: '/plugins/$pluginId/community/$apiId/',
    getParentRoute: () => rootRoute,
  } as any)

const PluginsPluginIdInstancesInstanceIdFeedRoute =
  PluginsPluginIdInstancesInstanceIdFeedImport.update({
    id: '/plugins/$pluginId/instances/$instanceId/feed',
    path: '/plugins/$pluginId/instances/$instanceId/feed',
    getParentRoute: () => rootRoute,
  } as any)

const PluginsPluginIdCommunityCommunityIdPostApiIdRoute =
  PluginsPluginIdCommunityCommunityIdPostApiIdImport.update({
    id: '/plugins/$pluginId/community/$communityId/post/$apiId',
    path: '/plugins/$pluginId/community/$communityId/post/$apiId',
    getParentRoute: () => rootRoute,
  } as any)

const PluginsPluginIdInstancesInstanceIdCommunityApiIdIndexRoute =
  PluginsPluginIdInstancesInstanceIdCommunityApiIdIndexImport.update({
    id: '/plugins/$pluginId/instances/$instanceId/community/$apiId/',
    path: '/plugins/$pluginId/instances/$instanceId/community/$apiId/',
    getParentRoute: () => rootRoute,
  } as any)

const PluginsPluginIdInstancesInstanceIdCommunityCommunityIdPostApiIdRoute =
  PluginsPluginIdInstancesInstanceIdCommunityCommunityIdPostApiIdImport.update({
    id: '/plugins/$pluginId/instances/$instanceId/community/$communityId/post/$apiId',
    path: '/plugins/$pluginId/instances/$instanceId/community/$communityId/post/$apiId',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/plugins/$pluginId/feed': {
      id: '/plugins/$pluginId/feed'
      path: '/plugins/$pluginId/feed'
      fullPath: '/plugins/$pluginId/feed'
      preLoaderRoute: typeof PluginsPluginIdFeedImport
      parentRoute: typeof rootRoute
    }
    '/plugins/$pluginId/post/$apiId': {
      id: '/plugins/$pluginId/post/$apiId'
      path: '/plugins/$pluginId/post/$apiId'
      fullPath: '/plugins/$pluginId/post/$apiId'
      preLoaderRoute: typeof PluginsPluginIdPostApiIdImport
      parentRoute: typeof rootRoute
    }
    '/plugins/$pluginId/trending/$topicName': {
      id: '/plugins/$pluginId/trending/$topicName'
      path: '/plugins/$pluginId/trending/$topicName'
      fullPath: '/plugins/$pluginId/trending/$topicName'
      preLoaderRoute: typeof PluginsPluginIdTrendingTopicNameImport
      parentRoute: typeof rootRoute
    }
    '/plugins/$pluginId/user/$apiId': {
      id: '/plugins/$pluginId/user/$apiId'
      path: '/plugins/$pluginId/user/$apiId'
      fullPath: '/plugins/$pluginId/user/$apiId'
      preLoaderRoute: typeof PluginsPluginIdUserApiIdImport
      parentRoute: typeof rootRoute
    }
    '/plugins/$pluginId/instances/': {
      id: '/plugins/$pluginId/instances/'
      path: '/plugins/$pluginId/instances'
      fullPath: '/plugins/$pluginId/instances'
      preLoaderRoute: typeof PluginsPluginIdInstancesIndexImport
      parentRoute: typeof rootRoute
    }
    '/plugins/$pluginId/trending/': {
      id: '/plugins/$pluginId/trending/'
      path: '/plugins/$pluginId/trending'
      fullPath: '/plugins/$pluginId/trending'
      preLoaderRoute: typeof PluginsPluginIdTrendingIndexImport
      parentRoute: typeof rootRoute
    }
    '/plugins/$pluginId/instances/$instanceId/feed': {
      id: '/plugins/$pluginId/instances/$instanceId/feed'
      path: '/plugins/$pluginId/instances/$instanceId/feed'
      fullPath: '/plugins/$pluginId/instances/$instanceId/feed'
      preLoaderRoute: typeof PluginsPluginIdInstancesInstanceIdFeedImport
      parentRoute: typeof rootRoute
    }
    '/plugins/$pluginId/community/$apiId/': {
      id: '/plugins/$pluginId/community/$apiId/'
      path: '/plugins/$pluginId/community/$apiId'
      fullPath: '/plugins/$pluginId/community/$apiId'
      preLoaderRoute: typeof PluginsPluginIdCommunityApiIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/plugins/$pluginId/community/$communityId/post/$apiId': {
      id: '/plugins/$pluginId/community/$communityId/post/$apiId'
      path: '/plugins/$pluginId/community/$communityId/post/$apiId'
      fullPath: '/plugins/$pluginId/community/$communityId/post/$apiId'
      preLoaderRoute: typeof PluginsPluginIdCommunityCommunityIdPostApiIdImport
      parentRoute: typeof rootRoute
    }
    '/plugins/$pluginId/instances/$instanceId/community/$apiId/': {
      id: '/plugins/$pluginId/instances/$instanceId/community/$apiId/'
      path: '/plugins/$pluginId/instances/$instanceId/community/$apiId'
      fullPath: '/plugins/$pluginId/instances/$instanceId/community/$apiId'
      preLoaderRoute: typeof PluginsPluginIdInstancesInstanceIdCommunityApiIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/plugins/$pluginId/instances/$instanceId/community/$communityId/post/$apiId': {
      id: '/plugins/$pluginId/instances/$instanceId/community/$communityId/post/$apiId'
      path: '/plugins/$pluginId/instances/$instanceId/community/$communityId/post/$apiId'
      fullPath: '/plugins/$pluginId/instances/$instanceId/community/$communityId/post/$apiId'
      preLoaderRoute: typeof PluginsPluginIdInstancesInstanceIdCommunityCommunityIdPostApiIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/settings': typeof SettingsRoute
  '/plugins/$pluginId/feed': typeof PluginsPluginIdFeedRoute
  '/plugins/$pluginId/post/$apiId': typeof PluginsPluginIdPostApiIdRoute
  '/plugins/$pluginId/trending/$topicName': typeof PluginsPluginIdTrendingTopicNameRoute
  '/plugins/$pluginId/user/$apiId': typeof PluginsPluginIdUserApiIdRoute
  '/plugins/$pluginId/instances': typeof PluginsPluginIdInstancesIndexRoute
  '/plugins/$pluginId/trending': typeof PluginsPluginIdTrendingIndexRoute
  '/plugins/$pluginId/instances/$instanceId/feed': typeof PluginsPluginIdInstancesInstanceIdFeedRoute
  '/plugins/$pluginId/community/$apiId': typeof PluginsPluginIdCommunityApiIdIndexRoute
  '/plugins/$pluginId/community/$communityId/post/$apiId': typeof PluginsPluginIdCommunityCommunityIdPostApiIdRoute
  '/plugins/$pluginId/instances/$instanceId/community/$apiId': typeof PluginsPluginIdInstancesInstanceIdCommunityApiIdIndexRoute
  '/plugins/$pluginId/instances/$instanceId/community/$communityId/post/$apiId': typeof PluginsPluginIdInstancesInstanceIdCommunityCommunityIdPostApiIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/settings': typeof SettingsRoute
  '/plugins/$pluginId/feed': typeof PluginsPluginIdFeedRoute
  '/plugins/$pluginId/post/$apiId': typeof PluginsPluginIdPostApiIdRoute
  '/plugins/$pluginId/trending/$topicName': typeof PluginsPluginIdTrendingTopicNameRoute
  '/plugins/$pluginId/user/$apiId': typeof PluginsPluginIdUserApiIdRoute
  '/plugins/$pluginId/instances': typeof PluginsPluginIdInstancesIndexRoute
  '/plugins/$pluginId/trending': typeof PluginsPluginIdTrendingIndexRoute
  '/plugins/$pluginId/instances/$instanceId/feed': typeof PluginsPluginIdInstancesInstanceIdFeedRoute
  '/plugins/$pluginId/community/$apiId': typeof PluginsPluginIdCommunityApiIdIndexRoute
  '/plugins/$pluginId/community/$communityId/post/$apiId': typeof PluginsPluginIdCommunityCommunityIdPostApiIdRoute
  '/plugins/$pluginId/instances/$instanceId/community/$apiId': typeof PluginsPluginIdInstancesInstanceIdCommunityApiIdIndexRoute
  '/plugins/$pluginId/instances/$instanceId/community/$communityId/post/$apiId': typeof PluginsPluginIdInstancesInstanceIdCommunityCommunityIdPostApiIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/settings': typeof SettingsRoute
  '/plugins/$pluginId/feed': typeof PluginsPluginIdFeedRoute
  '/plugins/$pluginId/post/$apiId': typeof PluginsPluginIdPostApiIdRoute
  '/plugins/$pluginId/trending/$topicName': typeof PluginsPluginIdTrendingTopicNameRoute
  '/plugins/$pluginId/user/$apiId': typeof PluginsPluginIdUserApiIdRoute
  '/plugins/$pluginId/instances/': typeof PluginsPluginIdInstancesIndexRoute
  '/plugins/$pluginId/trending/': typeof PluginsPluginIdTrendingIndexRoute
  '/plugins/$pluginId/instances/$instanceId/feed': typeof PluginsPluginIdInstancesInstanceIdFeedRoute
  '/plugins/$pluginId/community/$apiId/': typeof PluginsPluginIdCommunityApiIdIndexRoute
  '/plugins/$pluginId/community/$communityId/post/$apiId': typeof PluginsPluginIdCommunityCommunityIdPostApiIdRoute
  '/plugins/$pluginId/instances/$instanceId/community/$apiId/': typeof PluginsPluginIdInstancesInstanceIdCommunityApiIdIndexRoute
  '/plugins/$pluginId/instances/$instanceId/community/$communityId/post/$apiId': typeof PluginsPluginIdInstancesInstanceIdCommunityCommunityIdPostApiIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/settings'
    | '/plugins/$pluginId/feed'
    | '/plugins/$pluginId/post/$apiId'
    | '/plugins/$pluginId/trending/$topicName'
    | '/plugins/$pluginId/user/$apiId'
    | '/plugins/$pluginId/instances'
    | '/plugins/$pluginId/trending'
    | '/plugins/$pluginId/instances/$instanceId/feed'
    | '/plugins/$pluginId/community/$apiId'
    | '/plugins/$pluginId/community/$communityId/post/$apiId'
    | '/plugins/$pluginId/instances/$instanceId/community/$apiId'
    | '/plugins/$pluginId/instances/$instanceId/community/$communityId/post/$apiId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/settings'
    | '/plugins/$pluginId/feed'
    | '/plugins/$pluginId/post/$apiId'
    | '/plugins/$pluginId/trending/$topicName'
    | '/plugins/$pluginId/user/$apiId'
    | '/plugins/$pluginId/instances'
    | '/plugins/$pluginId/trending'
    | '/plugins/$pluginId/instances/$instanceId/feed'
    | '/plugins/$pluginId/community/$apiId'
    | '/plugins/$pluginId/community/$communityId/post/$apiId'
    | '/plugins/$pluginId/instances/$instanceId/community/$apiId'
    | '/plugins/$pluginId/instances/$instanceId/community/$communityId/post/$apiId'
  id:
    | '__root__'
    | '/'
    | '/settings'
    | '/plugins/$pluginId/feed'
    | '/plugins/$pluginId/post/$apiId'
    | '/plugins/$pluginId/trending/$topicName'
    | '/plugins/$pluginId/user/$apiId'
    | '/plugins/$pluginId/instances/'
    | '/plugins/$pluginId/trending/'
    | '/plugins/$pluginId/instances/$instanceId/feed'
    | '/plugins/$pluginId/community/$apiId/'
    | '/plugins/$pluginId/community/$communityId/post/$apiId'
    | '/plugins/$pluginId/instances/$instanceId/community/$apiId/'
    | '/plugins/$pluginId/instances/$instanceId/community/$communityId/post/$apiId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  SettingsRoute: typeof SettingsRoute
  PluginsPluginIdFeedRoute: typeof PluginsPluginIdFeedRoute
  PluginsPluginIdPostApiIdRoute: typeof PluginsPluginIdPostApiIdRoute
  PluginsPluginIdTrendingTopicNameRoute: typeof PluginsPluginIdTrendingTopicNameRoute
  PluginsPluginIdUserApiIdRoute: typeof PluginsPluginIdUserApiIdRoute
  PluginsPluginIdInstancesIndexRoute: typeof PluginsPluginIdInstancesIndexRoute
  PluginsPluginIdTrendingIndexRoute: typeof PluginsPluginIdTrendingIndexRoute
  PluginsPluginIdInstancesInstanceIdFeedRoute: typeof PluginsPluginIdInstancesInstanceIdFeedRoute
  PluginsPluginIdCommunityApiIdIndexRoute: typeof PluginsPluginIdCommunityApiIdIndexRoute
  PluginsPluginIdCommunityCommunityIdPostApiIdRoute: typeof PluginsPluginIdCommunityCommunityIdPostApiIdRoute
  PluginsPluginIdInstancesInstanceIdCommunityApiIdIndexRoute: typeof PluginsPluginIdInstancesInstanceIdCommunityApiIdIndexRoute
  PluginsPluginIdInstancesInstanceIdCommunityCommunityIdPostApiIdRoute: typeof PluginsPluginIdInstancesInstanceIdCommunityCommunityIdPostApiIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  SettingsRoute: SettingsRoute,
  PluginsPluginIdFeedRoute: PluginsPluginIdFeedRoute,
  PluginsPluginIdPostApiIdRoute: PluginsPluginIdPostApiIdRoute,
  PluginsPluginIdTrendingTopicNameRoute: PluginsPluginIdTrendingTopicNameRoute,
  PluginsPluginIdUserApiIdRoute: PluginsPluginIdUserApiIdRoute,
  PluginsPluginIdInstancesIndexRoute: PluginsPluginIdInstancesIndexRoute,
  PluginsPluginIdTrendingIndexRoute: PluginsPluginIdTrendingIndexRoute,
  PluginsPluginIdInstancesInstanceIdFeedRoute:
    PluginsPluginIdInstancesInstanceIdFeedRoute,
  PluginsPluginIdCommunityApiIdIndexRoute:
    PluginsPluginIdCommunityApiIdIndexRoute,
  PluginsPluginIdCommunityCommunityIdPostApiIdRoute:
    PluginsPluginIdCommunityCommunityIdPostApiIdRoute,
  PluginsPluginIdInstancesInstanceIdCommunityApiIdIndexRoute:
    PluginsPluginIdInstancesInstanceIdCommunityApiIdIndexRoute,
  PluginsPluginIdInstancesInstanceIdCommunityCommunityIdPostApiIdRoute:
    PluginsPluginIdInstancesInstanceIdCommunityCommunityIdPostApiIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/settings",
        "/plugins/$pluginId/feed",
        "/plugins/$pluginId/post/$apiId",
        "/plugins/$pluginId/trending/$topicName",
        "/plugins/$pluginId/user/$apiId",
        "/plugins/$pluginId/instances/",
        "/plugins/$pluginId/trending/",
        "/plugins/$pluginId/instances/$instanceId/feed",
        "/plugins/$pluginId/community/$apiId/",
        "/plugins/$pluginId/community/$communityId/post/$apiId",
        "/plugins/$pluginId/instances/$instanceId/community/$apiId/",
        "/plugins/$pluginId/instances/$instanceId/community/$communityId/post/$apiId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/settings": {
      "filePath": "settings.tsx"
    },
    "/plugins/$pluginId/feed": {
      "filePath": "plugins/$pluginId/feed.tsx"
    },
    "/plugins/$pluginId/post/$apiId": {
      "filePath": "plugins/$pluginId/post.$apiId.tsx"
    },
    "/plugins/$pluginId/trending/$topicName": {
      "filePath": "plugins/$pluginId/trending.$topicName.tsx"
    },
    "/plugins/$pluginId/user/$apiId": {
      "filePath": "plugins/$pluginId/user.$apiId.tsx"
    },
    "/plugins/$pluginId/instances/": {
      "filePath": "plugins/$pluginId/instances/index.tsx"
    },
    "/plugins/$pluginId/trending/": {
      "filePath": "plugins/$pluginId/trending.index.tsx"
    },
    "/plugins/$pluginId/instances/$instanceId/feed": {
      "filePath": "plugins/$pluginId/instances/$instanceId/feed.tsx"
    },
    "/plugins/$pluginId/community/$apiId/": {
      "filePath": "plugins/$pluginId/community.$apiId.index.tsx"
    },
    "/plugins/$pluginId/community/$communityId/post/$apiId": {
      "filePath": "plugins/$pluginId/community.$communityId.post.$apiId.tsx"
    },
    "/plugins/$pluginId/instances/$instanceId/community/$apiId/": {
      "filePath": "plugins/$pluginId/instances/$instanceId/community.$apiId.index.tsx"
    },
    "/plugins/$pluginId/instances/$instanceId/community/$communityId/post/$apiId": {
      "filePath": "plugins/$pluginId/instances/$instanceId/community.$communityId.post.$apiId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
