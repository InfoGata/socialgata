/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SettingsImport } from './routes/settings'
import { Route as IndexImport } from './routes/index'
import { Route as PluginsPluginIdFeedImport } from './routes/plugins/$pluginId/feed'
import { Route as PluginsPluginIdUserApiIdImport } from './routes/plugins/$pluginId/user.$apiId'
import { Route as PluginsPluginIdPostApiIdImport } from './routes/plugins/$pluginId/post.$apiId'
import { Route as PluginsPluginIdCommunityApiIdIndexImport } from './routes/plugins/$pluginId/community.$apiId.index'
import { Route as PluginsPluginIdCommunityCommunityIdPostApiIdImport } from './routes/plugins/$pluginId/community.$communityId.post.$apiId'

// Create/Update Routes

const SettingsRoute = SettingsImport.update({
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const PluginsPluginIdFeedRoute = PluginsPluginIdFeedImport.update({
  path: '/plugins/$pluginId/feed',
  getParentRoute: () => rootRoute,
} as any)

const PluginsPluginIdUserApiIdRoute = PluginsPluginIdUserApiIdImport.update({
  path: '/plugins/$pluginId/user/$apiId',
  getParentRoute: () => rootRoute,
} as any)

const PluginsPluginIdPostApiIdRoute = PluginsPluginIdPostApiIdImport.update({
  path: '/plugins/$pluginId/post/$apiId',
  getParentRoute: () => rootRoute,
} as any)

const PluginsPluginIdCommunityApiIdIndexRoute =
  PluginsPluginIdCommunityApiIdIndexImport.update({
    path: '/plugins/$pluginId/community/$apiId/',
    getParentRoute: () => rootRoute,
  } as any)

const PluginsPluginIdCommunityCommunityIdPostApiIdRoute =
  PluginsPluginIdCommunityCommunityIdPostApiIdImport.update({
    path: '/plugins/$pluginId/community/$communityId/post/$apiId',
    getParentRoute: () => rootRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsImport
      parentRoute: typeof rootRoute
    }
    '/plugins/$pluginId/feed': {
      id: '/plugins/$pluginId/feed'
      path: '/plugins/$pluginId/feed'
      fullPath: '/plugins/$pluginId/feed'
      preLoaderRoute: typeof PluginsPluginIdFeedImport
      parentRoute: typeof rootRoute
    }
    '/plugins/$pluginId/post/$apiId': {
      id: '/plugins/$pluginId/post/$apiId'
      path: '/plugins/$pluginId/post/$apiId'
      fullPath: '/plugins/$pluginId/post/$apiId'
      preLoaderRoute: typeof PluginsPluginIdPostApiIdImport
      parentRoute: typeof rootRoute
    }
    '/plugins/$pluginId/user/$apiId': {
      id: '/plugins/$pluginId/user/$apiId'
      path: '/plugins/$pluginId/user/$apiId'
      fullPath: '/plugins/$pluginId/user/$apiId'
      preLoaderRoute: typeof PluginsPluginIdUserApiIdImport
      parentRoute: typeof rootRoute
    }
    '/plugins/$pluginId/community/$apiId/': {
      id: '/plugins/$pluginId/community/$apiId/'
      path: '/plugins/$pluginId/community/$apiId'
      fullPath: '/plugins/$pluginId/community/$apiId'
      preLoaderRoute: typeof PluginsPluginIdCommunityApiIdIndexImport
      parentRoute: typeof rootRoute
    }
    '/plugins/$pluginId/community/$communityId/post/$apiId': {
      id: '/plugins/$pluginId/community/$communityId/post/$apiId'
      path: '/plugins/$pluginId/community/$communityId/post/$apiId'
      fullPath: '/plugins/$pluginId/community/$communityId/post/$apiId'
      preLoaderRoute: typeof PluginsPluginIdCommunityCommunityIdPostApiIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren({
  IndexRoute,
  SettingsRoute,
  PluginsPluginIdFeedRoute,
  PluginsPluginIdPostApiIdRoute,
  PluginsPluginIdUserApiIdRoute,
  PluginsPluginIdCommunityApiIdIndexRoute,
  PluginsPluginIdCommunityCommunityIdPostApiIdRoute,
})

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/settings",
        "/plugins/$pluginId/feed",
        "/plugins/$pluginId/post/$apiId",
        "/plugins/$pluginId/user/$apiId",
        "/plugins/$pluginId/community/$apiId/",
        "/plugins/$pluginId/community/$communityId/post/$apiId"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/settings": {
      "filePath": "settings.tsx"
    },
    "/plugins/$pluginId/feed": {
      "filePath": "plugins/$pluginId/feed.tsx"
    },
    "/plugins/$pluginId/post/$apiId": {
      "filePath": "plugins/$pluginId/post.$apiId.tsx"
    },
    "/plugins/$pluginId/user/$apiId": {
      "filePath": "plugins/$pluginId/user.$apiId.tsx"
    },
    "/plugins/$pluginId/community/$apiId/": {
      "filePath": "plugins/$pluginId/community.$apiId.index.tsx"
    },
    "/plugins/$pluginId/community/$communityId/post/$apiId": {
      "filePath": "plugins/$pluginId/community.$communityId.post.$apiId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
